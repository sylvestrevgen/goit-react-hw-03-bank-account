{"version":3,"sources":["components/TransactionHistory/transactionHistory.module.css","components/Balance/balance.module.css","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js","components/Controls/controls.module.css"],"names":["module","exports","Controls","onSubmitTransaction","onChange","inputValue","className","styles","controls","type","placeholder","input","value","onClick","name","button","Balance","balance","expenses","incomes","span","arrowDown","role","aria-label","arrowUp","TransactionHistory","transactions","tableItems","map","id","amount","date","key","td","history","tr","th","Dashboard","state","handleSubmit","event","newTransaction","shortid","generate","target","Number","Date","toLocaleString","toast","setState","Math","round","parseFloat","handleInputChange","test","transactionsLS","localStorage","getItem","balanceLS","this","JSON","parse","prevProps","prevState","setItem","stringify","reduce","acc","item","dashboard","Component","App","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4796f438.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"transactionHistory_history__PcYRV\",\"th\":\"transactionHistory_th__14BsM\",\"td\":\"transactionHistory_td__3IbHC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"balance_balance__3lJy1\",\"span\":\"balance_span__1kMOa\",\"arrowDown\":\"balance_arrowDown__16CPC\",\"arrowUp\":\"balance_arrowUp__BRorM\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './controls.module.css';\n\nconst Controls = ({ onSubmitTransaction, onChange, inputValue }) => {\n  return (\n    <section className={styles.controls}>\n      <input\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"Enter transaction amount...\"\n        className={styles.input}\n        value={inputValue}\n      />\n      <button\n        onClick={onSubmitTransaction}\n        name=\"deposit\"\n        type=\"button\"\n        className={styles.button}\n      >\n        Deposit\n      </button>\n      <button\n        onClick={onSubmitTransaction}\n        name=\"withdrawal\"\n        type=\"button\"\n        className={styles.button}\n      >\n        Withdraw\n      </button>\n    </section>\n  );\n};\n\nControls.propTypes = {\n  onSubmitTransaction: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  inputValue: PropTypes.string.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './balance.module.css';\n\nconst Balance = ({ balance, expenses, incomes }) => {\n  return (\n    <section className={styles.balance}>\n      <span className={styles.span}>\n        <span className={styles.arrowDown} role=\"img\" aria-label=\"arrow\">\n          ⬇️\n        </span>\n        {`${expenses}$`}\n      </span>\n      <span className={styles.span}>\n        <span className={styles.arrowUp} role=\"img\" aria-label=\"arrow\">\n          ⬆️\n        </span>\n        {`${incomes}$`}\n      </span>\n      <span className={styles.span}>{`Balance: ${balance}$`}</span>\n    </section>\n  );\n};\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n  incomes: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './transactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  const tableItems = transactions.map(({ id, type, amount, date }) => (\n    <tr key={id}>\n      <td className={styles.td}>{type}</td>\n      <td className={styles.td}>{`${amount}$`}</td>\n      <td className={styles.td}>{date}</td>\n    </tr>\n  ));\n\n  return (\n    <table className={styles.history}>\n      <thead>\n        <tr className={styles.tr}>\n          <th className={styles.th}>Transaction</th>\n          <th className={styles.th}>Amount</th>\n          <th className={styles.th}>Date</th>\n        </tr>\n      </thead>\n      {transactions && <tbody>{tableItems}</tbody>}\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './dashboard.module.css';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n    inputValue: '',\n  };\n\n  componentDidMount() {\n    const transactionsLS = localStorage.getItem('transactions');\n    const balanceLS = localStorage.getItem('balance');\n\n    if (transactionsLS && balanceLS) {\n      this.setState({\n        transactions: JSON.parse(transactionsLS),\n        balance: JSON.parse(balanceLS),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions, balance } = this.state;\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('transactions', JSON.stringify([...transactions]));\n      localStorage.setItem('balance', JSON.stringify(balance));\n    }\n  }\n\n  handleSubmit = event => {\n    const newTransaction = {\n      id: shortid.generate(),\n      type: event.target.name,\n      amount: Number(this.state.inputValue),\n      date: new Date().toLocaleString('en-US'),\n    };\n\n    if (\n      newTransaction.type === 'withdrawal' &&\n      this.state.inputValue > this.state.balance\n    ) {\n      toast('На счету недостаточно средств для проведения операции!');\n      return;\n    }\n\n    if (newTransaction.amount === 0 || !newTransaction.amount) {\n      toast('Введите сумму для проведения операции!');\n      return;\n    }\n\n    this.setState(state => ({\n      transactions: [...state.transactions, newTransaction],\n      balance:\n        newTransaction.type === 'deposit'\n          ? Math.round(\n              parseFloat(state.balance + newTransaction.amount) * 100,\n            ) / 100\n          : Math.round(\n              parseFloat(state.balance - newTransaction.amount) * 100,\n            ) / 100,\n      inputValue: '',\n    }));\n  };\n\n  handleInputChange = event => {\n    if (/^\\d*[.]?\\d{0,2}$/.test(event.target.value)) {\n      this.setState({\n        inputValue: event.target.value,\n      });\n    }\n  };\n\n  render() {\n    const { transactions, balance, inputValue } = this.state;\n\n    const incomes = [...transactions].reduce((acc, item) => {\n      if (item.type === 'deposit') {\n        return acc + item.amount;\n      }\n      return acc;\n    }, 0);\n\n    const expenses = [...transactions].reduce((acc, item) => {\n      if (item.type === 'withdrawal') {\n        return acc + item.amount;\n      }\n      return acc;\n    }, 0);\n\n    return (\n      <div className={styles.dashboard}>\n        <Controls\n          onSubmitTransaction={this.handleSubmit}\n          onChange={this.handleInputChange}\n          inputValue={inputValue}\n        />\n        <ToastContainer />\n        <Balance balance={balance} incomes={incomes} expenses={expenses} />\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport styles from './app.module.css';\nimport Dashboard from '../Dashboard/Dashboard';\n\nconst App = () => (\n  <div className={styles.app}>\n    <Dashboard />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"controls_controls__-nQ4t\",\"input\":\"controls_input__1H1FD\",\"button\":\"controls_button__2HjFp\"};"],"sourceRoot":""}